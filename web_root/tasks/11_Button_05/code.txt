using System.Windows.Forms;
using System;
using System.Collections.Generic;
using System.Reflection;
using System.ComponentModel;

namespace ns_d_code
{
    public class cls_Main
    {
        public static string test(Form f, string s_app_fnp, string s_app_ft) //validation sub:
        {
			cls_output_controller cls_output_controller = new cls_output_controller();
			try
			{
				//початок коду валідації:			
				//---------------------------------------------------->
				//v global properties:
				cls_output_controller._v_form(f);
				cls_output_controller._v_parm(s_app_ft,			"App name",             "Button_05.exe");
				//---------------------------------------------------->
				//подключаемся к инстансу ивента Form_Load
				MethodInfo loadMethodInfo = f.GetType().GetMethod("OnLoad", BindingFlags.NonPublic | BindingFlags.Instance);
				//вызываем Form_Load у формы:
				loadMethodInfo.Invoke(f, new object[] { EventArgs.Empty });
				//---------------------------------------------------->	
				cls_output_controller._v_parm(f.AutoScaleMode,	"AutoScaleMode",		"None");
				cls_output_controller._v_parm(f.Text,			"Text",					"Робота з полем для вводу тексту");
				cls_output_controller._v_parm(f.Width,			"Width",				"700");
				cls_output_controller._v_parm(f.Height,			"Height",				"500");
				cls_output_controller._v_parm(f.Font.Size,		"Font.Size",			"20");
				cls_output_controller._v_parm(f.StartPosition,	"StartPosition",		"CenterScreen");

				//подключаемся к инстансу:
				TextBox tb1 = (TextBox)cls_output_controller._v_get_obj(f, "tb_Input");
				//валидация: exists & properties:
				cls_output_controller._v_obj_exists(tb1, "tb_Input");				
				cls_output_controller._v_parm(tb1.Name,	"Name",	"tb_Input");
				cls_output_controller._v_parm(tb1.Text,	"Text",	"");	

				//подключаемся к инстансу:
				Label lb1 = (Label)cls_output_controller._v_get_obj(f, "lb_Result");
				//валидация: exists & properties:
				cls_output_controller._v_obj_exists(lb1, "lb_Result");
				cls_output_controller._v_parm(lb1.Name, "Name", "lb_Result");
				cls_output_controller._v_parm(lb1.Text, "Text", "Тут з'явиться текст при натисканні на кнопку");	

				//подключаемся к инстансу:
				Button btn1 = (Button)cls_output_controller._v_get_obj(f, "btn_CopyText");  
				//валидация: exists & properties:
				cls_output_controller._v_obj_exists(btn1, "btn_CopyText");
				cls_output_controller._v_parm(btn1.Name, "Name", "btn_CopyText");
				cls_output_controller._v_parm(btn1.Text, "Text", "Скопіювати текст");
				//валидация: или есть ивент ("EventClick") у данного инстанса контрола (btn1):
				cls_output_controller._v_HasEventHandler(btn1, "EventClick");
				//Перевірка події на кнопці:
				//встановлюємо невідомий учню контрольний маркер:
				tb1.Text = "test-value-012345";
				//підготовка аксессора метода - clickMethodInfo:
				MethodInfo clickMethodInfo = f.GetType().GetMethod("OnClick", BindingFlags.NonPublic | BindingFlags.Instance);
				//виклик події - емуляція натискання на кнопку:
				clickMethodInfo.Invoke(btn1, new object[] { EventArgs.Empty });
				//перевірка копіювання (порівнюємо lb_Target.Text із маркером):
				cls_output_controller._v_parm(lb1.Text, "Text", "test-value-012345");
				
				//подключаемся к инстансу:
				Button btn2 = (Button)cls_output_controller._v_get_obj(f, "btn_Close");  
				//валидация: exists & properties:
				cls_output_controller._v_obj_exists(btn2, "btn_Close");
				cls_output_controller._v_parm(btn2.Name, "Name", "btn_Close");
				cls_output_controller._v_parm(btn2.Text, "Text", "Закрити");
				//валидация: или есть ивент ("EventClick") у данного инстанса контрола (btn2):
				cls_output_controller._v_HasEventHandler(btn2, "EventClick");
				//підготовка аксессора метода - clickMethodInfo:
				MethodInfo clickMethodInfo2 = f.GetType().GetMethod("OnClick", BindingFlags.NonPublic | BindingFlags.Instance);
				//виклик події - емуляція натискання на кнопку:
				clickMethodInfo2.Invoke(btn2, new object[] { EventArgs.Empty });
//ToDo перевірка закриття форми 
				cls_output_controller._v_form(f);
				//---------------------------------------------------->
			}
			catch
			{
                //
			}
            return(cls_output_controller._final_result());
        }
        public static void Main() //main entry point:
        {  }
    }
	//[validator-class-placeholder]
}