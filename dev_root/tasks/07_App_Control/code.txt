using System.Windows.Forms;
using System;
using System.Collections.Generic;
using System.Reflection;
using System.ComponentModel;

namespace ns_d_code
{
    public class cls_Main
    {
        public static string test(Form f, string s_app_fnp, string s_app_ft) //validation sub:
        {
			cls_output_controller cls_output_controller = new cls_output_controller();
			try
			{
				cls_output_controller._v_form(f);
				cls_output_controller._v_parm(s_app_ft,			"App name",             "App_Control.exe");						
				//---------------------------------------------------->
				//подключаемся к инстансу ивента Form_Load
				MethodInfo loadMethodInfo = f.GetType().GetMethod("OnLoad", BindingFlags.NonPublic | BindingFlags.Instance);
				//вызываем Form_Load у формы:
				loadMethodInfo.Invoke(f, new object[] { EventArgs.Empty });
				//---------------------------------------------------->						        
				cls_output_controller._v_parm(f.AutoScaleMode,	"Form.AutoScaleMode",	"None");
				cls_output_controller._v_parm(f.Text,			"Form.Text",			"Підсумковий урок");
				cls_output_controller._v_parm(f.Width,			"Form.Width",			"500");
				cls_output_controller._v_parm(f.Height,			"Form.Height",			"400");
				cls_output_controller._v_parm(f.StartPosition,	"StartPosition",		"CenterScreen");
				cls_output_controller._v_parm(f.BackColor.Name, "Form.BackColor.Name",	"White");
				cls_output_controller._v_parm(f.ControlBox,		"ControlBox",			"False");
				//---------------------------------------------------->
				//1. подключаемся к инстансу:
				Label label1 = (Label)cls_output_controller._v_get_obj(f, "label1");
				//2. валидируем на существование объекта:
				cls_output_controller._v_obj_exists(label1,	"label1");				
				cls_output_controller._v_parm(label1.Name,				"label1.Name",				"label1");
				cls_output_controller._v_parm(label1.Text,				"label1.Text",				"Обчислення значення функції");							
				cls_output_controller._v_parm(label1.ForeColor.Name,	"label1.ForeColor.Name",	"Black");				
				cls_output_controller._v_parm(label1.Font.Size,			"label1.Font.Size",			"16");
				cls_output_controller._v_parm(label1.Font.Bold,			"label1.Font.Bold",			"True");
				//---------------------------------------------------->
				//1. подключаемся к инстансу:
				//PictureBox pictureBox1 = (PictureBox)cls_output_controller._v_get_obj(f, "pictureBox1");
				//2. валидируем на существование объекта:
				//cls_output_controller._v_obj_exists(pictureBox1,	"pictureBox1");
				//cls_output_controller._v_parm(pictureBox1.Name,						"pictureBox1.Name",		"pictureBox1");
				//cls_output_controller._v_parm(pictureBox1.Width,					"pictureBox1.Width",	"335");
				//cls_output_controller._v_parm(pictureBox1.Height,					"pictureBox1.Height",	"85");
				//cls_output_controller._v_parm(pictureBox1.BackgroundImage,		"pictureBox1.BackgroundImage",	"1.png");							
				//cls_output_controller._v_parm(pictureBox1.BackgroundImageLayout,	"pictureBox1.BackgroundImageLayout",	"Zoom");		
				//---------------------------------------------------->
				//TextBox
				//---------------------------------------------------->
				//1. подключаемся к инстансу RadioButton:
				//RadioButton rb1 = (RadioButton)cls_output_controller._v_get_obj(f, "radioButton1");
				//2. валидация: или существует: RadioButton
				//cls_output_controller._v_obj_exists(rb1,	"radioButton1");
				//---------------------------------------------------->
				//3. валидация: или есть ивент ("CheckedChanged") у данного инстанса контрола (rb1):
				//cls_output_controller._v_HasEventHandler(rb1, "EventCheckedChanged");
				//---------------------------------------------------->
			}
			catch
			{
                //
			}
            return(cls_output_controller._final_result());
        }
        public static void Main() //main entry point:
        {  }
    }
	//[validator-class-placeholder]
}