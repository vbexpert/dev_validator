using System.Windows.Forms;
using System;
using System.Collections.Generic;
using System.Reflection;
using System.ComponentModel;

namespace ns_d_code
{
    public class cls_Main
    {
        public static string test(Form f, string s_app_fnp, string s_app_ft) //validation sub:
        {
			cls_output_controller cls_output_controller = new cls_output_controller();
			try
			{
				//початок коду валідації:			
				//---------------------------------------------------->
				//v global properties:
				cls_output_controller._v_form(f);
				cls_output_controller._v_parm(s_app_ft,			"App name",             "Circle.exe");
				//---------------------------------------------------->
				//подключаемся к инстансу ивента Form_Load
				MethodInfo loadMethodInfo = f.GetType().GetMethod("OnLoad", BindingFlags.NonPublic | BindingFlags.Instance);
				//вызываем Form_Load у формы:
				loadMethodInfo.Invoke(f, new object[] { EventArgs.Empty });
				//---------------------------------------------------->	
				cls_output_controller._v_parm(f.AutoScaleMode,		"AutoScaleMode",		"None");
				cls_output_controller._v_parm(f.Text,				"Text",					"Коло");
				cls_output_controller._v_parm(f.Width,				"Width",				"666");
				cls_output_controller._v_parm(f.Height,				"Height",				"666");	
				cls_output_controller._v_parm(f.Font.Size,			"Font.Size",			"20");			
				cls_output_controller._v_parm(f.StartPosition,		"StartPosition",		"CenterScreen");				
				

				//подключаемся к инстансу:
				Label label1 = (Label)cls_output_controller._v_get_obj(f, "label1");
				//валидация: exists & properties:
				cls_output_controller._v_obj_exists(label1, "label1");
				cls_output_controller._v_parm(label1.Name, "Name", "label1");
				cls_output_controller._v_parm(label1.Text, "Text", "Введіть радіус кола");
								
				//подключаемся к инстансу:
				TextBox tb_Input = (TextBox)cls_output_controller._v_get_obj(f, "tb_Input");
				//валидация: exists & properties:
				cls_output_controller._v_obj_exists(tb_Input, "tb_Input");				
				cls_output_controller._v_parm(tb_Input.Name,	"Name",	"tb_Input");
				cls_output_controller._v_parm(tb_Input.Text,	"Text",	"0");
				
				//подключаемся к инстансу:
				PictureBox pb_Image = (PictureBox)cls_output_controller._v_get_obj(f, "pb_Image");
				//валидация: exists & properties:
				cls_output_controller._v_obj_exists(pb_Image, "pb_Image");				
				cls_output_controller._v_parm(pb_Image.Name,			"Name",					"pb_Image");
				cls_output_controller._v_parm(pb_Image.Width,			"Width",				"300");
				cls_output_controller._v_parm(pb_Image.Height,			"Height",				"300");
				cls_output_controller._v_parm(pb_Image.Height,			"Height",				"300"); 
				//cls_output_controller._v_parm(pb_Image.BackgroundImage,		"BackgroundImage",	"Circle.png");							
				cls_output_controller._v_parm(pb_Image.BackgroundImageLayout,	"BackgroundImageLayout",	"Zoom");

				//подключаемся к инстансу:
				Label label2 = (Label)cls_output_controller._v_get_obj(f, "label2");
				//валидация: exists & properties:
				cls_output_controller._v_obj_exists(label2, "label2");
				cls_output_controller._v_parm(label2.Name, "Name", "label2");
				cls_output_controller._v_parm(label2.Text, "Text", "Радіус:");

				//подключаемся к инстансу:
				Label label3 = (Label)cls_output_controller._v_get_obj(f, "label3");
				//валидация: exists & properties:
				cls_output_controller._v_obj_exists(label3, "label3");
				cls_output_controller._v_parm(label3.Name, "Name", "label3");
				cls_output_controller._v_parm(label3.Text, "Text", "Діаметр:");

				//подключаемся к инстансу:
				Label label4 = (Label)cls_output_controller._v_get_obj(f, "label4");
				//валидация: exists & properties:
				cls_output_controller._v_obj_exists(label4, "label4");
				cls_output_controller._v_parm(label4.Name, "Name", "label4");
				cls_output_controller._v_parm(label4.Text, "Text", "Довжина кола:");

				//подключаемся к инстансу:
				Label label5 = (Label)cls_output_controller._v_get_obj(f, "label5");
				//валидация: exists & properties:
				cls_output_controller._v_obj_exists(label5, "label5");
				cls_output_controller._v_parm(label5.Name, "Name", "label5");
				cls_output_controller._v_parm(label5.Text, "Text", "Площа круга:");

				//подключаемся к инстансу:
				Label label6 = (Label)cls_output_controller._v_get_obj(f, "label6");
				//валидация: exists & properties:
				cls_output_controller._v_obj_exists(label6, "label6");
				cls_output_controller._v_parm(label6.Name, "Name", "label6");
				cls_output_controller._v_parm(label6.Text, "Text", "Об'єм сфери:");

				//подключаемся к инстансу:
				Label lb_Radius = (Label)cls_output_controller._v_get_obj(f, "lb_Radius");
				//валидация: exists & properties:
				cls_output_controller._v_obj_exists(lb_Radius, "lb_Radius");
				cls_output_controller._v_parm(lb_Radius.Name, "Name", "lb_Radius");
				cls_output_controller._v_parm(lb_Radius.Text, "Text", "0");

				//подключаемся к инстансу:
				Label lb_Diameter = (Label)cls_output_controller._v_get_obj(f, "lb_Diameter");
				//валидация: exists & properties:
				cls_output_controller._v_obj_exists(lb_Diameter, "lb_Diameter");
				cls_output_controller._v_parm(lb_Diameter.Name, "Name", "lb_Diameter");
				cls_output_controller._v_parm(lb_Diameter.Text, "Text", "0");

				//подключаемся к инстансу:
				Label lb_Length = (Label)cls_output_controller._v_get_obj(f, "lb_Length");
				//валидация: exists & properties:
				cls_output_controller._v_obj_exists(lb_Length, "lb_Length");
				cls_output_controller._v_parm(lb_Length.Name, "Name", "lb_Length");
				cls_output_controller._v_parm(lb_Length.Text, "Text", "0");

				//подключаемся к инстансу:
				Label lb_Square = (Label)cls_output_controller._v_get_obj(f, "lb_Square");
				//валидация: exists & properties:
				cls_output_controller._v_obj_exists(lb_Square, "lb_Square");
				cls_output_controller._v_parm(lb_Square.Name, "Name", "lb_Square");
				cls_output_controller._v_parm(lb_Square.Text, "Text", "0");

				//подключаемся к инстансу:
				Label lb_Extent = (Label)cls_output_controller._v_get_obj(f, "lb_Extent");
				//валидация: exists & properties:
				cls_output_controller._v_obj_exists(lb_Extent, "lb_Extent");
				cls_output_controller._v_parm(lb_Extent.Name, "Name", "lb_Extent");
				cls_output_controller._v_parm(lb_Extent.Text, "Text", "0");

				//подключаемся к инстансу:
				Button btn_Calculate = (Button)cls_output_controller._v_get_obj(f, "btn_Calculate");  
				//валидация: exists & properties:
				cls_output_controller._v_obj_exists(btn_Calculate, "btn_Calculate");
				cls_output_controller._v_parm(btn_Calculate.Name, "Name", "btn_Calculate");
				cls_output_controller._v_parm(btn_Calculate.Text, "Text", "Розрахувати");
				//валидация: или есть ивент ("EventClick") у данного инстанса контрола (btn_Calculate):
				cls_output_controller._v_HasEventHandler(btn_Calculate, "EventClick");
				cls_output_controller._v_HasEventHandler(btn_Calculate, "EventClick");//для відмітки провалідованого коду
				//Перевірка події на кнопці:
				//встановлюємо невідомий учню контрольний маркер:
				tb_Input.Text = "10";
				//підготовка аксессора метода - btn_Calculate_Click:
				MethodInfo btn_Calculate_Click = f.GetType().GetMethod("OnClick", BindingFlags.NonPublic | BindingFlags.Instance);
				//виклик події - емуляція натискання на кнопку:
				btn_Calculate_Click.Invoke(btn_Calculate, new object[] { EventArgs.Empty });
				//перевірка копіювання (порівнюємо Результати із маркером):
				cls_output_controller._v_parm(lb_Radius.Text, "Text", "10");
				cls_output_controller._v_parm(lb_Diameter.Text, "Text", "20");
				cls_output_controller._v_parm(lb_Length.Text, "Text", "62,83");
				cls_output_controller._v_parm(lb_Square.Text, "Text", "314,16");
				cls_output_controller._v_parm(lb_Extent.Text, "Text", "4188,79");
				
				//подключаемся к инстансу:
				Button btn_Close = (Button)cls_output_controller._v_get_obj(f, "btn_Close");  
				//валидация: exists & properties:
				cls_output_controller._v_obj_exists(btn_Close, "btn_Close");
				cls_output_controller._v_parm(btn_Close.Name, "Name", "btn_Close");
				cls_output_controller._v_parm(btn_Close.Text, "Text", "Закрити");
				//валидация: или есть ивент ("EventClick") у данного инстанса контрола (btn_Close):
				cls_output_controller._v_HasEventHandler(btn_Close, "EventClick");
				cls_output_controller._v_HasEventHandler(btn_Close, "EventClick");//для відмітки провалідованого коду
				//підготовка аксессора метода - btn_Close_Click:
				MethodInfo btn_Close_Click = f.GetType().GetMethod("OnClick", BindingFlags.NonPublic | BindingFlags.Instance);
				//виклик події - емуляція натискання на кнопку:
				btn_Close_Click.Invoke(btn_Calculate, new object[] { EventArgs.Empty });
//ToDo перевірка закриття форми 
				cls_output_controller._v_form(f);

				//подключаемся к инстансу:
				TextBox tb_Info = (TextBox)cls_output_controller._v_get_obj(f, "tb_Info");
				//валидация: exists & properties:
				cls_output_controller._v_obj_exists(tb_Info, "tb_Info");				
				cls_output_controller._v_parm(tb_Info.Name,			"Name",				"tb_Info");
				cls_output_controller._v_parm(tb_Info.Multiline,	"Multiline",		"True");
				cls_output_controller._v_parm(tb_Info.Width,		"Width",			"600");
				cls_output_controller._v_parm(tb_Info.Height,		"Height",			"50");		
				cls_output_controller._v_parm(tb_Info.Font.Size,	"Font.Size",		"12");		
				
				cls_output_controller._v_parm(tb_Info.Text,			"Text",				"Програма для розрахунку розмірностей кола та сфери створена у рамках вивчення програмування обчислювальних проектів.");	

				//подключаемся к инстансу:
				Label lb_Author = (Label)cls_output_controller._v_get_obj(f, "lb_Author");
				//валидация: exists & properties:
				cls_output_controller._v_obj_exists(lb_Author, 			"lb_Author");
				cls_output_controller._v_parm(lb_Author.Name, 			"Name", 			"lb_Author");
				cls_output_controller._v_parm(lb_Author.Font.Size,		"Font.Size",		"12");	
				cls_output_controller._v_parm(lb_Author.ForeColor.Name,	"ForeColor.Name",	"ControlDarkDark");
				cls_output_controller._v_neg_parm(lb_Author.Text,		"Text",				"");
			}
			catch
			{
                //
			}
            return(cls_output_controller._final_result());
        }
        public static void Main() //main entry point:
        {  }
    }
	//[validator-class-placeholder]
}